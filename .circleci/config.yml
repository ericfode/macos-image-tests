version: 2
jobs:
  test:
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      SOFTWARE: /tmp/circleci-artifacts/software_versions.json
    macos:
      xcode: 9.4.1
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        key: v2-ruby-cache-{{ checksum "Gemfile.lock" }}
    - run:
        command: >
          bundle check --path=vendor/bundle ||
          bundle install --path=vendor/bundle --jobs=4 --retry=3
    - save_cache:
        key: v2-ruby-cache-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
    - run: "./software_versions.rb > $SOFTWARE"
    - run:
        command: jq -r '.image.build' $SOFTWARE > /tmp/circleci-artifacts/version.txt
    - run: bundle exec rspec --format documentation --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec.xml
    - run:
        name: Run schema Tests
        command: |
          pip3 install jsonschema
          jsonschema -i $SOFTWARE software_versions.schema.json
    - run:
        name: Take A Screenshot To Ensure The Screen Is Unlocked.
        command: |
           # Give the VM time to finish booting and logging in
           sleep 20
           screencapture $CIRCLE_ARTIFACTS/screen.png
           [ -s $CIRCLE_ARTIFACTS/screen.png ]
        when: always
    - persist_to_workspace:
        root: /tmp/circleci-artifacts
        paths:
          - version.txt
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results

  build_site:
    working_directory: ~/circleci/macos-image-tests
    environment:
    docker:
      - image: circleci/ruby:2.4
    steps:
      - checkout
      - run:
          command: |
            bundle install
            bundle exec jekyll build
          working_directory: pages
      - persist_to_workspace:
          root: pages
          paths:
            - _site

  deploy_site:
    working_directory: ~/circleci/macos-image-tests
    environment:
      CACHE_MAX_AGE: 600
      AWS_DEFAULT_REGION: us-east-1
    docker:
      - image: dantoml/awscli
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: >
            aws s3 cp
            --acl public-read
            --cache-control "max-age=$CACHE_MAX_AGE"
            --recursive
            /tmp/workspace/_site
            s3://circle-macos-docs/image-manifest/`cat /tmp/workspace/version.txt`

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - build_site:
          filters:
            branches:
              only:
                - /release.*/
                - master
          requires:
            - test
      - deploy_site:
          filters:
            branches:
              only:
                - /release.*/
                - master
          requires:
            - test
            - build_site
